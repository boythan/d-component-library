import { unitOfTime, MomentInput } from "moment";
declare function calculateMonthDifferent(d1: number, d2: number): number;
declare function calculateWeekDifferent(d1: number, d2: number): number;
declare function calculateDayDifferent(d1: number, d2: number): number;
declare function calculateTimeDifferent(moment1: MomentInput, moment2: MomentInput, type?: unitOfTime.Diff): number;
declare function convertRangeDateToArray(date1: MomentInput, date2: MomentInput): string[];
declare const _default: {
    convertToDefaultInputFormat: (timeMili: any) => string;
    convertMiliToDateWithFormat: (timeInMillis: any, FORMAT: string) => string;
    convertMiliToTime: (timeInMillis: any) => string;
    convertMiliToDate: (timeInMillis: any, lang?: string) => string;
    convertMiliToMinutes: (miliSeconds: any) => number;
    convertMinutesToMili: (minutes: any) => number | undefined;
    convertMiliToDateTime: (timeInMillis: any, lang?: string) => string;
    convertDateTimeToMili: (dateTime: any) => number;
    calculateMonthDifferent: typeof calculateMonthDifferent;
    calculateWeekDifferent: typeof calculateWeekDifferent;
    calculateDayDifferent: typeof calculateDayDifferent;
    calculateTimeDifferent: typeof calculateTimeDifferent;
    convertRangeDateToArray: typeof convertRangeDateToArray;
    MONTH_MILISECOND: number;
    WEEK_MILISECOND: number;
    DAY_MILISECOND: number;
    DATE_FORMAT: string;
    DATE_TIME_FORMAT: string;
    DATE_INPUT_FORMAT: string;
    DATE_TIME_INPUT_FORMAT: string;
    MONTH_INPUT_FORMAT: string;
    YEAR_INPUT_FORMAT: string;
    ANT_DATE_TIME_INPUT_FORMAT: string;
    ANT_DATE_INPUT_FORMAT: string;
    ANT_MONTH_INPUT_FORMAT: string;
    ANT_YEAR_INPUT_FORMAT: string;
};
export default _default;
